/// <reference types="node" />
import { EventEmitter } from 'events';
import { PollingTransport, RegistrationRequest, DeviceRegistrationResult } from './interfaces';
/**
 * @private
 */
export declare class PollingStateMachine extends EventEmitter {
    private _fsm;
    private _pollingTimer;
    private _queryTimer;
    private _transport;
    private _currentOperationCallback;
    constructor(transport: PollingTransport);
    register(request: RegistrationRequest, callback: (err?: Error, result?: DeviceRegistrationResult, response?: any) => void): void;
    cancel(callback: (err: Error) => void): void;
    disconnect(callback: (err: Error) => void): void;
}
