/// <reference types="node" />
import { EventEmitter } from 'events';
import { RegistrationClient, RegistrationResult } from './interfaces';
import { TpmProvisioningTransport, TpmSecurityClient } from './interfaces';
/**
 * @private
 */
export declare class TpmRegistration extends EventEmitter implements RegistrationClient {
    private _fsm;
    private _transport;
    private _securityClient;
    private _provisioningHost;
    private _idScope;
    private _pollingStateMachine;
    constructor(provisioningHost: string, idScope: string, transport: TpmProvisioningTransport, securityClient: TpmSecurityClient);
    register(callback: (err?: Error, result?: RegistrationResult) => void): void;
    cancel(callback: (err?: Error) => void): void;
    private _createRegistrationSas(registrationInfo, callback);
}
